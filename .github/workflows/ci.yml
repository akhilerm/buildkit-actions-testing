name: ci

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write


jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      packages: write

    defaults:
      run:
        working-directory: src/github.com/containerd/containerd

    strategy:
      fail-fast: false
      matrix:
        id:
          - 1
#          - 2
#          - 3
#          - 4
#          - 5
#          - 6
#          - 7
#          - 8
#          - 9
#          - 10
#          - 11
#          - 12
#          - 13
#          - 14
#          - 15
#          - 16
#          - 17
#          - 18
#          - 19
#          - 20
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: "1.19.5"

      - uses: actions/checkout@v3
        with:
          repository: containerd/containerd
          #          ref: #add commit here
          path: src/github.com/containerd/containerd

      - name: Login to Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: akhilerm
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            network=host

      - name: Write Dockerfile
        run: |
          echo "FROM alpine:latest" > Dockerfile
          echo "RUN dd if=/dev/urandom of=layer bs=1024KB count=500" >> Dockerfile
          echo "RUN dd if=/dev/urandom of=layer bs=1024KB count=500" >> Dockerfile
          echo "RUN dd if=/dev/urandom of=layer bs=1024KB count=500" >> Dockerfile
          echo "RUN dd if=/dev/urandom of=layer bs=1024KB count=500" >> Dockerfile
          echo "RUN dd if=/dev/urandom of=layer bs=1024KB count=500" >> Dockerfile
          echo "RUN dd if=/dev/urandom of=layer bs=1024KB count=500" >> Dockerfile
          echo "RUN dd if=/dev/urandom of=layer bs=1024KB count=500" >> Dockerfile
          echo "RUN dd if=/dev/urandom of=layer bs=1024KB count=500" >> Dockerfile
          echo "RUN dd if=/dev/urandom of=layer bs=1024KB count=500" >> Dockerfile
          echo "RUN dd if=/dev/urandom of=layer bs=1024KB count=500" >> Dockerfile

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: src/github.com/containerd/containerd/Dockerfile
          outputs: type=registry,dest=quay.io/akhilerm/test:5g,push=true,compression=uncompressed
          tags: quay.io/akhilerm/test:${{ matrix.id }}

      - name: Set env
        shell: bash
        run: |
          echo "GOPATH=${{ github.workspace }}" >> $GITHUB_ENV
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

      - name: Install containerd dependencies
        env:
          GOFLAGS: -modcacherw
        run: |
          sudo apt-get install -y gperf
          sudo -E PATH=$PATH script/setup/install-seccomp

      - name: Install containerd
        env:
          CGO_ENABLED: 1
        run: |
          make binaries GO_BUILD_FLAGS="-mod=vendor" GO_BUILDTAGS="no_btrfs"
          sudo -E PATH=$PATH make install

      - name: Containerd version
        shell: bash
        run: |
          sudo containerd --version

      - name: Pull and push image
        shell: bash
        run: |
          sudo containerd -l debug & > /tmp/containerd.out
          containerd_pid=$!
          sleep 5

          mirror="ghcr.io/akhilerm/buildkit-actions-testing:${{ matrix.id }}"


          echo "Mirroring "

          sudo ctr content fetch --all-platforms quay.io/akhilerm/test:${{ matrix.id }}
          sudo ctr images ls
          sudo ctr --debug images push -u akhilerm:${{ secrets.GITHUB_TOKEN }} ${mirror} quay.io/akhilerm/test:${{ matrix.id }}

          sudo kill $containerd_pid